@{
    ViewBag.Title = "Home Page";
}
<h1 class="title-regular clearfix">EISK HOME</h1>
<p><a href="https://github.com/EISK" target="_blank">EISK Github</a></p>

<p>EISK &ndash; ASP.NET MVC edition bundles most of the greatest and successful platforms, frameworks and technologies together, to enable web developers to learn and build manageable and high performance web applications with rich user experience effectively  and quickly.</p>
<h4>Key Technology Areas</h4>
<ul>
    <li>C# 5.0 </li>
    <li>.NET 4.5.1 </li>
    <li>ASP.NET MVC 4.5 </li>
    <li>jQuery/Html5/CSS3 </li>
    <li>Entity Framework 6.0.1 (<em>Code First Approach</em>) </li>
    <li>Visual Studio 2013 - 2022</li>
    <li>Sql Server Localdb </li>
</ul>
<h4>QuickStart Guide</h4>
<p>
    Getting started with EISK MVC is pretty easy. Once you've Visual Studio, then just follow the steps as provided below:
    <img src="http://weblogs.asp.net/blogs/ashraful/image_28DA2EC0.png" alt="" />
</p>
<ul>
    <li>
        Download and open the project in Visual Studio.
    </li>
    <li>Hit Ctrl+F5 and explore! </li>
</ul>
<h4>Architectural Overview</h4>
<ul>
    <li>Overall architecture is based on <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank">Model-View-Controller (MVC) design pattern</a> </li>
    <li>Support for desktop &amp; mobile browsers. </li>
    <li>Usage of Data Annotations in <em>Model (Entity) classes</em> to centralize basic validation mechanism that facilitates DRY principle </li>
    <li>Usage of IValidatableObject interface in <em>Model (Entity) classes</em> that isolates custom <em>Business Logic</em> from application layer </li>
    <li>Usage of OOP inheritance and Value <a href="http://weblogs.asp.net/ashraful/archive/2012/02/19/design-patterns-for-model.aspx">Object design pattern</a> in <a href="http://weblogs.asp.net/ashraful/archive/2012/02/19/design-patterns-for-model.aspx">Model (Entity)</a> classes that provides reusability in application architecture </li>
    <li>Usage of <a href="http://weblogs.asp.net/ashraful/archive/2012/02/19/design-patterns-for-model.aspx">View Model, Editor Model design pattern</a> that provides mechanism for testable view rendering logic </li>
    <li>Usage of <a href="http://martinfowler.com/eaaCatalog/domainModel.html" target="_blank">Domain Model</a>, <a href="http://martinfowler.com/eaaCatalog/repository.html" target="_blank">Repository</a> and <a href="http://martinfowler.com/eaaCatalog/unitOfWork.html" target="_blank">Unit of Work</a> design <em>pattern</em> from <a href="http://en.wikipedia.org/wiki/Domain-driven_design" target="_blank">Domain-driven Design (DDD)</a> approach </li>
    <li>Usage of <a href="http://martinfowler.com/eaaCatalog/dataMapper.html" target="_blank">Data Mapper design pattern</a> for <em>Data Access Layer</em> using Entity Framework &ndash; <em>Code First Approach</em> </li>
    <li>Several reusable helper classes and extension methods for <em>Cross Cutting Concerns</em> (i.e. logging etc)&nbsp; and other repetitive functionalities. </li>
</ul>
<h4>Github</h4>
<p><a href="https://github.com/EISK" target="_blank">EISK Github</a></p>

